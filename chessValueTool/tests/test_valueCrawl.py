import unittest
from fenParser.fen import Position
from chessValueTool import tool

class test_valueCrawl(unittest.TestCase):
    def setup(self):
        pass

    def teardown(self):
        pass

    def test_crawlInitPos(self):
        #*arrange
        p = Position()
        #*act
        #*assert
        # expected = "move:c0e2,score:15 (4),rank:2,note:! (44-11),winrate:50.30|move:g3g4,score:15 (5),rank:2,note:! (44-02),winrate:50.38|move:h2e2,score:15 (2),rank:2,note:! (45-02),winrate:50.15|move:c3c4,score:15 (5),rank:2,note:! (44-02),winrate:50.38|move:g0e2,score:15 (4),rank:2,note:! (44-11),winrate:50.30|move:b2e2,score:15 (2),rank:2,note:! (45-02),winrate:50.15|move:b0c2,score:10 (2),rank:2,note:! (43-02),winrate:50.15|move:b2d2,score:10 (6),rank:2,note:! (45-09),winrate:50.45|move:b2f2,score:10 (3),rank:2,note:! (45-09),winrate:50.23|move:h2d2,score:10 (3),rank:2,note:! (45-09),winrate:50.23|move:h2f2,score:10 (6),rank:2,note:! (45-09),winrate:50.45|move:h0g2,score:10 (2),rank:2,note:! (43-02),winrate:50.15|move:h2i2,score:1,rank:1,note:* (45-04),winrate:50.08|move:b2a2,score:1,rank:1,note:* (45-04),winrate:50.08|move:d0e1,score:0,rank:1,note:* (44-14),winrate:50.00|move:h0i2,score:0,rank:1,note:* (43-04),winrate:50.00|move:f0e1,score:0,rank:1,note:* (44-14),winrate:50.00|move:i3i4,score:0,rank:1,note:* (44-17),winrate:50.00|move:b2g2,score:0,rank:1,note:* (45-17),winrate:50.00|move:h2c2,score:0,rank:1,note:* (45-17),winrate:50.00|move:a3a4,score:0,rank:1,note:* (44-17),winrate:50.00|move:b0a2,score:0,rank:1,note:* (43-04),winrate:50.00|move:b2c2,score:-1,rank:1,note:* (45-11),winrate:49.92|move:h2g2,score:-1,rank:1,note:* (45-11),winrate:49.92|move:h2h4,score:-3,rank:0,note:? (42-17),winrate:49.77|move:b2b4,score:-3,rank:0,note:? (42-17),winrate:49.77|move:h2h6,score:-7,rank:0,note:? (40-08),winrate:49.47|move:b2b6,score:-7,rank:0,note:? (40-08),winrate:49.47|move:h2h1,score:-33,rank:0,note:? (45-01),winrate:47.50|move:b2b1,score:-33,rank:0,note:? (45-01),winrate:47.50|move:b2b3,score:-57,rank:0,note:? (43-01),winrate:45.69|move:h2h3,score:-57,rank:0,note:? (43-01),winrate:45.69|move:c0a2,score:-68,rank:0,note:? (44-01),winrate:44.87|move:g0i2,score:-68,rank:0,note:? (44-01),winrate:44.87|move:h2h5,score:-106,rank:0,note:? (41-01),winrate:42.04|move:b2b5,score:-106,rank:0,note:? (41-01),winrate:42.04|move:i0i2,score:-129,rank:0,note:? (44-01),winrate:40.35|move:a0a2,score:-129,rank:0,note:? (44-01),winrate:40.35|move:a0a1,score:-141,rank:0,note:? (44-01),winrate:39.48|move:i0i1,score:-141,rank:0,note:? (44-01),winrate:39.48|move:e3e4,score:-151,rank:0,note:? (23-01),winrate:38.76|move:e0e1,score:-156,rank:0,note:? (23-01),winrate:38.40|move:b2b9,score:-171,rank:0,note:? (41-01),winrate:37.33|move:h2h9,score:-171,rank:0,note:? (41-01),winrate:37.33"
        expected = "move:g0e2,score:15 (3),rank:2,note:! (44-09),winrate:50.23|move:g3g4,score:15 (5),rank:2,note:! (44-02),winrate:50.38|move:c0e2,score:15 (3),rank:2,note:! (44-09),winrate:50.23|move:h2e2,score:15 (2),rank:2,note:! (45-02),winrate:50.15|move:b2e2,score:15 (2),rank:2,note:! (45-02),winrate:50.15|move:c3c4,score:15 (5),rank:2,note:! (44-02),winrate:50.38|move:b2d2,score:10 (5),rank:2,note:! (45-08),winrate:50.38|move:b0c2,score:10 (2),rank:2,note:! (43-02),winrate:50.15|move:h2f2,score:10 (5),rank:2,note:! (45-08),winrate:50.38|move:h2d2,score:10 (3),rank:2,note:! (45-09),winrate:50.23|move:b2f2,score:10 (3),rank:2,note:! (45-09),winrate:50.23|move:h0g2,score:10 (2),rank:2,note:! (43-02),winrate:50.15|move:h2i2,score:1,rank:1,note:* (45-04),winrate:50.08|move:b2a2,score:1,rank:1,note:* (45-04),winrate:50.08|move:h0i2,score:1,rank:1,note:* (43-04),winrate:50.08|move:b0a2,score:1,rank:1,note:* (43-04),winrate:50.08|move:i3i4,score:0,rank:1,note:* (44-17),winrate:50.00|move:d0e1,score:0,rank:1,note:* (44-14),winrate:50.00|move:b2g2,score:0,rank:1,note:* (45-17),winrate:50.00|move:f0e1,score:0,rank:1,note:* (44-14),winrate:50.00|move:a3a4,score:0,rank:1,note:* (44-17),winrate:50.00|move:h2c2,score:0,rank:1,note:* (45-17),winrate:50.00|move:h2g2,score:-1,rank:1,note:* (45-11),winrate:49.92|move:b2c2,score:-1,rank:1,note:* (45-11),winrate:49.92|move:b2b4,score:-3,rank:0,note:? (42-17),winrate:49.77|move:h2h4,score:-3,rank:0,note:? (42-17),winrate:49.77|move:h2h6,score:-8,rank:0,note:? (40-06),winrate:49.39|move:b2b6,score:-8,rank:0,note:? (40-06),winrate:49.39|move:h2h1,score:-33,rank:0,note:? (45-01),winrate:47.50|move:b2b1,score:-33,rank:0,note:? (45-01),winrate:47.50|move:g0i2,score:-57,rank:0,note:? (44-01),winrate:45.69|move:c0a2,score:-57,rank:0,note:? (44-01),winrate:45.69|move:h2h3,score:-83,rank:0,note:? (43-01),winrate:43.75|move:b2b3,score:-83,rank:0,note:? (43-01),winrate:43.75|move:h2h5,score:-98,rank:0,note:? (41-01),winrate:42.63|move:b2b5,score:-98,rank:0,note:? (41-01),winrate:42.63|move:i0i2,score:-129,rank:0,note:? (44-01),winrate:40.35|move:a0a2,score:-129,rank:0,note:? (44-01),winrate:40.35|move:i0i1,score:-141,rank:0,note:? (44-01),winrate:39.48|move:a0a1,score:-141,rank:0,note:? (44-01),winrate:39.48|move:e3e4,score:-151,rank:0,note:? (23-01),winrate:38.76|move:e0e1,score:-156,rank:0,note:? (23-01),winrate:38.40|move:b2b9,score:-171,rank:0,note:? (41-01),winrate:37.33|move:h2h9,score:-171,rank:0,note:? (41-01),winrate:37.33"
        expectedValues = tool.formatChessValues(expected)
        ret = p.getValuedMoves()[:-1]
        retValues = tool.formatChessValues(ret)
        # self.maxDiff = None
        for i in range(0,20):
            self.assertDictEqual(retValues[i], expectedValues[i])

        
